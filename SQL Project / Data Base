DROP DATABASE IF EXISTS TINA_CAFE;
CREATE DATABASE TINA_CAFE;
USE TINA_CAFE;


CREATE TABLE proveedor(
id_proveedor int not null auto_increment primary key,
id_producto int, 
nombre_proveedor VARCHAR(200),
telefono_proveedor VARCHAR(200),
direccion_proveedor VARCHAR(200),
email_proveedor VARCHAR(200) UNIQUE
);

CREATE TABLE producto(
id_producto int not null auto_increment primary key,
id_categoria_producto INT,
tipo_producto varchar (200),
nombre_producto VARCHAR (200),
precio_producto DECIMAL (10,2),
stock_producto INT
);

CREATE TABLE categoria_producto(
id_categoria_producto int not null auto_increment primary key,
nombre_categoria VARCHAR(200),
descripcion_categoria VARCHAR(200),
fecha_actualizacion_categoria DATE,
subcategoria VARCHAR (200)
);

CREATE TABLE cliente(
id_cliente int not null auto_increment primary key,
nombre_cliente VARCHAR(200),
DNI_cliente CHAR(8),
email_cliente VARCHAR (200) UNIQUE,
telefono_cliente VARCHAR (200)
);

CREATE TABLE empleado(
id_empleado int not null auto_increment primary key,
nombre_empleado VARCHAR (200),
direccion_empleado VARCHAR (200),
email_empleado VARCHAR (200) UNIQUE,
telefono_empleado VARCHAR (100),
puesto_empleado VARCHAR (200)
);

CREATE TABLE orden(
id_orden int not null auto_increment primary key,
id_cliente INT,
id_empleado INT,
fecha_orden DATE,
Estado_orden ENUM('pendiente', 'en proceso', 'completada', 'cancelada', 'pagada') DEFAULT 'pendiente'
);


CREATE TABLE pagos(
id_pagos int not null auto_increment primary key,
id_detalle_orden INT,
fecha_pago DATE,
Descuento_pago DECIMAL (5,2),
Metodo_pago ENUM('efectivo', 'tarjeta', 'transferencia', 'mercado_pago') DEFAULT 'efectivo',
Estado_pago ENUM('pendiente', 'completado', 'fallido', 'reembolsado') DEFAULT 'pendiente'
);

CREATE TABLE detalle_orden(
id_detalle_orden int not null auto_increment primary key,
id_orden INT,
id_producto INT,
comentarios_orden VARCHAR(200),
Cantidades_orden DECIMAL (10,2),
Metodo_entrega ENUM('delivery', 'consumo en local') DEFAULT 'consumo en local'
);

CREATE TABLE inventario ( 
id_inventario INT NOT NULL AUTO_INCREMENT PRIMARY KEY, 
id_producto INT, 
stock_producto INT, 
fecha_ingreso_producto DATE, 
fecha_vencimiento_producto DATE,
estado_producto ENUM('nuevo', 'promocion', 'defectuoso', 'normal') DEFAULT 'normal' 
);


CREATE TABLE envios (
    id_envio INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    id_orden INT,
    id_empleado INT,
    direccion_envio VARCHAR(200),
    fecha_envio DATE,
    estado_envio ENUM('pendiente', 'en tránsito', 'entregado') DEFAULT 'pendiente'
);


CREATE TABLE calificaciones (
    id_calificacion INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    id_cliente INT,
    id_orden INT,
    comentario_calificacion TEXT,
   tipo_comentario ENUM('producto', 'servicio', 'atencion_cliente', 'otro') DEFAULT 'producto',
    calificación INT 
);
ALTER TABLE
	proveedor
    ADD  CONSTRAINT fk_p_constraint_id_producto	
    FOREIGN KEY
    (id_producto) REFERENCES producto (id_producto);


ALTER TABLE
    producto 
    ADD  CONSTRAINT fk_constraint_id_categoria_producto 
    FOREIGN KEY 
    (id_categoria_producto) REFERENCES categoria_producto (id_categoria_producto);


ALTER TABLE
    orden 
    ADD  CONSTRAINT fk_constraint_id_cliente FOREIGN KEY (id_cliente ) REFERENCES cliente (id_cliente),
    ADD  CONSTRAINT fk_constraint_id_o_empleado FOREIGN KEY (id_empleado) REFERENCES empleado (id_empleado);

    
ALTER TABLE pagos
    ADD CONSTRAINT fk_constraint_id_detalle_orden FOREIGN KEY (id_detalle_orden) REFERENCES detalle_orden (id_detalle_orden);

    
ALTER TABLE
	detalle_orden
    ADD  CONSTRAINT fk_do_id_orden FOREIGN KEY (id_orden) REFERENCES orden (id_orden),
    ADD  CONSTRAINT fk_do_id_producto FOREIGN KEY (id_producto) REFERENCES producto (id_producto);	
        

ALTER TABLE
Inventario
ADD CONSTRAINT fk_inventario_producto 
FOREIGN KEY 
(id_producto) REFERENCES producto (id_producto);


ALTER TABLE
Envios
ADD CONSTRAINT fk_envio_orden FOREIGN KEY (id_orden) REFERENCES orden (id_orden),
ADD CONSTRAINT fk_envio_empleado FOREIGN KEY (id_empleado) REFERENCES empleado (id_empleado);


ALTER TABLE
Calificaciones
ADD CONSTRAINT fk_calificacion_cliente FOREIGN KEY (id_cliente) REFERENCES cliente (id_cliente),
ADD CONSTRAINT fk_calificacion_orden FOREIGN KEY (id_orden) REFERENCES orden (id_orden);

